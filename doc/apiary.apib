FORMAT: 1A
HOST: https://calorietracker.com/api/v1/

# Calorie Tracker

The API for a personal calorie tracking service.

## Authentication [/auth]

### Sign In [POST /auth/sign_in]

Authenticates a user based on their email address and password. Successful responses will include header values for: `Access-Token`, `Client`, and `Uid`. These headers and their values must be included on all subsequent requests for that users. Additionally successful responses will include an `Expiry` header value that identifies the time at which the token will expire.

Any successful request that authenticates the user using this token, will update the user's access token and include information for the updated token in the response headers. It is the clients responsibility to use this updated token on subsequent requests. 

+ Request

    + Headers

            Content-Type: application/json

    + Attributes (User Authentication Parameters)

+ Response 200 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000

    + Attributes (User Response)


### Sign Out [DELETE /auth/sign_out]

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 200 (application/json)

    + Body

            {
              "success": true
            }


### Validate Token [GET /auth/validate_token]

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 200 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000

    + Attributes (User Response)



## User Resources [/users]

### Create New User [POST]

+ Request

    + Headers

            Content-Type: application/json

    + Attributes (User Create Parameters)

+ Response 201 (application/json)

    + Attributes (User Response)

### Retrieve User Record [GET /users/{user_id}]

Users are only allowed to retrieve the details for their own user record.

+ Parameters

    + user_id: 1234 (number, required) - The ID of the user record to be retrieved.

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 200 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000

    + Attributes (User Response)



## Meal Resources [/meals]

### Lookup Meals [GET /meals{?limit}{?page}{?start_date}{?end_date}{?start_hour}{?end_hour}]

Retrieves a set of meals for the current user. Orders the results in descending order by the date of occurance.

+ Parameters

    + limit: 50 (number) - The number of records to be returned. Minimum: 1; Maximum: 999; Default: 50
    + page: 1 (number) - The page of results in the resultset to be returned. Minimum: 1; Default: 1
    + start_date: `2016-11-22` (string) - The earliest date of occurance for meals to be included in the resultset, inclusively.
    + end_date: `2016-11-22` (string) - The latest date of occurance for meals to be included in the resultset, inclusively.
    + start_hour: 0 (number) - The earliest hour of the day for the occurance of meals to be included in the resultset, inclusively. Minimum: 0; Maximum: 23
    + end_hour: 23 (number) - The latest hour of the day for the occurance of meals to be included in the resultset, inclusively. Minimum: 0; Maximum: 23

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 200 (application/json)

    + Attributes (Meals Response)

### Create New Meal [POST]

When a meal is created, it is associated with the current user's account.

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

    + Attributes (Meal Request Parameters)

+ Response 201 (application/json)

    + Attributes (Meal Response)

### Retrieve Meal Record [GET /meals/{meal_id}]

Users are only allowed to retrieve meals associated with their account.

+ Parameters

    + meal_id: 1234 (number, required) - The ID of the meal record to be retrieved.

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 200 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000

    + Attributes (Meal Response)

### Update Meal Record [PUT /meals/{meal_id}]

Any subset of the supported meal attributes can be included in an update request and only those attributes will be modified.

+ Parameters

    + meal_id: 1234 (number, required) - The ID of the meal record to be retrieved.

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

    + Attributes (Meal Request Parameters)

+ Response 200 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000

    + Attributes (Meal Response)

### Delete Meal Record [DELETE /meals/{meal_id}]

+ Parameters

    + meal_id: 1234 (number, required) - The ID of the meal record to be retrieved.

+ Request

    + Headers

            Content-Type: application/json
            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com

+ Response 204 (application/json)

    + Headers

            Access-Token: GyLhSQFKySUNloOOX832MQ
            Client: aUovw5WgoopgKfPlhe4Kfw
            Uid: john.doe@example.com
            Token-Type: Bearer
            Expiry: 1481294000



# Data Structures

## User Base Attributes (object)
- email: john.doe@example.com (string, required)
- name: `John Doe` (string, required)

## User Create Parameters (User Base Attributes)
- password: Pa$$word1234 (string, required)

## User Authentication Parameters (object)
- email: john.doe@example.com (string, required)
- password: Pa$$word1234 (string, required)

## User Resource (User Base Attributes)
- id: 1234 (number)
- created_at: `2016-11-22T21:39:13Z` (string)

## User Response (object)
- data (User Resource)

## Meal Base Attributes (object)
- description: `Lunch at home.` (string, required)
- calories: 736 (number, required)
- occurred_at: `2016-11-22T21:39:13Z` (string, required)

## Meal Request Parameters (Meal Base Attributes)

## Meal Resource (Meal Base Attributes)
- user (User Resource)

## Meal Response (object)
- data (Meal Resource)

## Meals Response (object)
- data (array[Meal Resource])